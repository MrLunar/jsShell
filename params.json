{"name":"jsShell","body":"jsShell - An interactive command line interface.\r\n===========================================\r\n\r\nGenerates a simple command entry shell for a set of pre-defined commands and outputs.\r\n\r\nIt can be used to provide an interactive demo of command line interface (CLI) commands for any program. Currently, it can handle:\r\n\r\n* Simple text output\r\n* Browser links\r\n* Custom callback functions\r\n\r\n![](/MrLunar/jsShell/raw/master/docs/jsshell-example.png)\r\n\r\nRequirements\r\n------------\r\n* jQuery (only tested on 1.7.2 so far)\r\n\r\nExample Usage\r\n-------------\r\nTo create the command shell:\r\n\r\n````javascript\r\n$('div#jsshell_container').jsShell({data: command_outputs});\r\n````\r\nwhere ```command_outputs``` is a previously defined set of commands and outputs.\r\n\r\nFor example, a simple 'welcome' command could be:\r\n\r\n```javascript\r\ncommand_outputs = new Object();\r\n\r\ncommand_outputs.welcome = new Object();\r\ncommand_outputs.welcome.type = 'text';\r\ncommand_outputs.welcome.text = new Array();\r\ncommand_outputs.welcome.text[0] = 'type \\'help\\' for command list';\r\n```\r\n\r\nOr to open a link in a new window/tab with the command 'github'\r\n\r\n```javascript\r\ncommand_outputs.github = new Object();\r\ncommand_outputs.github.type = 'link';\r\ncommand_outputs.github.href = 'http://github.com/';\r\ncommand_outputs.github.text = 'opening GitHub...';\r\n```\r\n\r\n### Custom Callback Functions ###\r\nCreate your very own callback function to perform...well...anything you want.\r\n\r\nLet's say we have a program called 'math' that we want to emulate. We could enter the following command into the shell\r\n\r\n```javascript\r\nmath 20 + 1\r\n```\r\n\r\nThe shell would call the 'math' callback function, as defined below, and pass through '20 + 1' as the first parameter. The math callback function could then process the command and output the result. The return value of the function should be a string or an array of strings.\r\n\r\n```javascript\r\ncommand_outputs.math = new Object();\r\ncommand_outputs.math.type = 'function';\r\ncommand_outputs.math.callback = function(args) { return math_function(args) };\r\n\r\nfunction math_function(args)\r\n{\r\n  // DO MATH OPERATION ON args\r\n\r\n  // Send Output as string or array (for multi-line)\r\n  return 'Math output';\r\n}\r\n```","tagline":"An interactive, JavaScript powered shell prompt.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}